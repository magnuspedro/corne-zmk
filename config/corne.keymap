/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&lt { quick-tap-ms = <200>; };

/ {
    macros {
        next_wp: next_wp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kp LEFT &kt LEFT_GUI>;
            label = "NEXT_WP";
        };

        prev_wp: prev_wp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kp RIGHT &kt LEFT_GUI>;
            label = "PREV_WP";
        };

        ch_next_wp: ch_next_wp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kp LEFT_SHIFT &kp LEFT &kt LEFT_GUI>;
            label = "CH_NEXT_WP";
        };

        ch_prev_wp: ch_prev_wp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kp LEFT_SHIFT &kp RIGHT &kt LEFT_GUI>;
            label = "CH_PREV_WP";
        };
    };

    behaviors {
        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        linux {
            bindings = <
&none             &kp Q            &kp W            &kp E         &kp R              &kp T        &kp Y         &kp U              &kp I                &kp O            &kp P               &kp LS(GRAVE)
&kp LS(NUMBER_6)  &rpi LEFT_GUI A  &rpi LEFT_ALT S  &rpi LCTRL D  &rpi LEFT_SHIFT F  &kp G        &kp H         &rpi LEFT_SHIFT J  &rpi LEFT_CONTROL K  &rpi LEFT_ALT L  &rpi LEFT_GUI SEMI  &kp SQT
&none             &kp Z            &kp X            &kp C         &kp V              &kp B        &kp N         &kp M              &kp COMMA            &kp DOT          &kp FSLH            &kp GRAVE
                                                    &lt 3 ESC     &lt 1 SPACE        &lt 2 TAB    &lt 5 RETURN  &lt 4 BACKSPACE    &lt 6 DELETE
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans         &trans       &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &trans
                        &trans  &trans  &trans    &kp RET   &kp BSPC       &kp DEL
            >;
        };

        bluetooth {
            bindings = <
&trans      &tog 0        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        sound {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans             &trans          &trans       &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &next_wp     &kp C_VOLUME_UP    &kp C_NEXT      &prev_wp     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &ch_next_wp  &kp C_VOLUME_DOWN  &kp C_PREVIOUS  &ch_prev_wp  &trans  &trans
                        &trans  &trans  &trans    &kp C_STOP   &kp C_PLAY_PAUSE   &kp C_MUTE
            >;
        };

        number {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans  &trans  &trans  &trans  &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans  &trans  &trans
            >;
        };

        symbol {
            bindings = <
&trans  &kp LS(LEFT_BRACKET)  &kp LS(N7)        &kp LS(N8)        &kp PERIOD        &kp LS(RBKT)                &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(COLON)         &kp LS(NUMBER_4)  &kp LS(N5)        &kp LS(NUMBER_6)  &kp LS(PLUS)                &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(GRAVE)         &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NON_US_BACKSLASH)    &trans  &trans  &trans  &trans  &trans  &trans
                                                &kp LS(N9)        &kp LS(N0)        &kp LS(MINUS)               &trans  &trans  &trans
            >;
        };

        f {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8   &kp F9     &kp PRINTSCREEN    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5   &kp F6     &trans             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2   &kp F3     &trans             &trans  &trans  &trans  &trans  &trans  &trans
                         &kp ESC  &kp SPACE  &kp TAB            &trans  &trans  &trans
            >;
        };

        mac {
            bindings = <
&trans  &trans               &trans  &trans  &trans           &trans    &trans  &trans           &trans  &trans  &trans                &trans
&trans  &rpi LEFT_CONTROL A  &trans  &trans  &rpi LEFT_GUI F  &trans    &trans  &rpi LEFT_GUI J  &trans  &trans  &rpi LCTRL SEMICOLON  &trans
&trans  &trans               &trans  &trans  &trans           &trans    &trans  &trans           &trans  &trans  &trans                &trans
                                     &trans  &trans           &trans    &trans  &trans           &trans
            >;
        };
    };
};
